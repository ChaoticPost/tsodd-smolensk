import React from 'react';
import styled from 'styled-components';

const PageContainer = styled.div`
  max-width: 1400px;
  margin: 0 auto;
  padding: 40px 24px;

  @media (max-width: 768px) {
    padding: 20px 16px;
  }
`;

const Header = styled.div`
  text-align: center;
  margin-bottom: 60px;
`;

const Title = styled.h1`
  font-size: 36px;
  font-weight: 700;
  color: #1a202c;
  margin: 0 0 20px;
  line-height: 1.2;

  @media (max-width: 768px) {
    font-size: 28px;
  }
`;

const Subtitle = styled.p`
  font-size: 18px;
  color: #4a5568;
  max-width: 800px;
  margin: 0 auto;
  line-height: 1.6;

  @media (max-width: 768px) {
    font-size: 16px;
  }
`;

const ActivitiesGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  gap: 32px;
  margin-bottom: 60px;

  @media (max-width: 768px) {
    grid-template-columns: 1fr;
    gap: 24px;
  }
`;

const ActivityCard = styled.div`
  background: white;
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  border: 1px solid #e5e7eb;
  transition: all 0.3s ease;

  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    border-color: #62A744;
  }
`;

const CardImage = styled.div<{ $gradient: string }>`
  height: 200px;
  background: ${props => props.$gradient};
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 64px;
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="1" fill="white" opacity="0.1"/></svg>') repeat;
    background-size: 20px 20px;
  }
`;

const CardContent = styled.div`
  padding: 32px;
`;

const CardTitle = styled.h3`
  font-size: 24px;
  font-weight: 700;
  color: #1a202c;
  margin: 0 0 16px;
  line-height: 1.3;
`;

const CardDescription = styled.p`
  color: #4a5568;
  line-height: 1.6;
  margin: 0 0 20px;
  font-size: 16px;
`;

const FeaturesList = styled.ul`
  list-style: none;
  padding: 0;
  margin: 0 0 24px;

  li {
    color: #64748b;
    font-size: 14px;
    line-height: 1.5;
    margin-bottom: 8px;
    padding-left: 20px;
    position: relative;

    &::before {
      content: '‚úì';
      position: absolute;
      left: 0;
      color: #62A744;
      font-weight: bold;
    }
  }
`;

const CardFooter = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-top: 20px;
  border-top: 1px solid #f1f5f9;
`;

const StatusBadge = styled.span<{ $status: 'active' | 'development' | 'planned' }>`
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 12px;
  font-weight: 600;
  text-transform: uppercase;
  background: ${props => {
    switch (props.$status) {
      case 'active': return '#dcfce7';
      case 'development': return '#fef3c7';
      case 'planned': return '#e0e7ff';
      default: return '#f1f5f9';
    }
  }};
  color: ${props => {
    switch (props.$status) {
      case 'active': return '#166534';
      case 'development': return '#92400e';
      case 'planned': return '#3730a3';
      default: return '#64748b';
    }
  }};
`;

const LearnMoreButton = styled.button`
  background: transparent;
  color: #62A744;
  border: 1px solid #62A744;
  padding: 8px 16px;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background: #62A744;
    color: white;
  }
`;

const StatsSection = styled.div`
  background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
  border-radius: 16px;
  padding: 48px 32px;
  margin-bottom: 60px;
  text-align: center;
  border: 1px solid #bbf7d0;

  h2 {
    font-size: 32px;
    font-weight: 700;
    color: #166534;
    margin: 0 0 16px;
  }

  p {
    font-size: 18px;
    color: #166534;
    margin: 0 0 32px;
  }
`;

const StatsGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 32px;
  margin-top: 32px;
`;

const StatItem = styled.div`
  text-align: center;

  .number {
    font-size: 36px;
    font-weight: 700;
    color: #166534;
    margin: 0 0 8px;
  }

  .label {
    font-size: 14px;
    color: #166534;
    font-weight: 500;
  }
`;

const activities = [
  {
    id: 'asudd',
    title: '–ê–°–£–î–î',
    description: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Ä–æ–∂–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º',
    icon: 'üö¶',
    gradient: 'linear-gradient(135deg, #fef2f2 0%, #fecaca 100%)',
    status: 'active' as const,
    features: [
      '–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞–º–∏',
      '–ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è',
      '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤',
      '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è'
    ]
  },
  {
    id: 'road-signs',
    title: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞, –∑–∞–º–µ–Ω–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –¥–æ—Ä–æ–∂–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤',
    description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—é –¥–æ—Ä–æ–∂–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤',
    icon: 'üõë',
    gradient: 'linear-gradient(135deg, #fef3c7 0%, #fed7aa 100%)',
    status: 'active' as const,
    features: [
      '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö –¥–æ—Ä–æ–∂–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤',
      '–ó–∞–º–µ–Ω–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–Ω–∞–∫–æ–≤',
      '–ü–ª–∞–Ω–æ–≤–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
      '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π'
    ]
  },
  {
    id: 'traffic-lights',
    title: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ, —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–≤–µ—Ç–æ—Ñ–æ—Ä–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤',
    description: '–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç —Å–æ —Å–≤–µ—Ç–æ—Ñ–æ—Ä–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏',
    icon: 'üö•',
    gradient: 'linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%)',
    status: 'active' as const,
    features: [
      '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö —Å–≤–µ—Ç–æ—Ñ–æ—Ä–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤',
      '–†–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö',
      '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
      '–ú–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'
    ]
  },
  {
    id: 'photo-video-fixation',
    title: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–æ–≤ —Ñ–æ—Ç–æ–≤–∏–¥–µ–æ—Ñ–∏–∫—Å–∞—Ü–∏–∏',
    description: '–°–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ–∏–∫—Å–∞—Ü–∏–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π –ü–î–î',
    icon: 'üìπ',
    gradient: 'linear-gradient(135deg, #e0e7ff 0%, #c7d2fe 100%)',
    status: 'active' as const,
    features: [
      '–°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã —Ñ–∏–∫—Å–∞—Ü–∏–∏',
      '–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ',
      '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö',
      '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π'
    ]
  },
  {
    id: 'mobile-fixation',
    title: '–ú–æ–±–∏–ª—å–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã —Ñ–æ—Ç–æ–≤–∏–¥–µ–æ—Ñ–∏–∫—Å–∞—Ü–∏–∏',
    description: '–ü–µ—Ä–µ–Ω–æ—Å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è',
    icon: 'üöê',
    gradient: 'linear-gradient(135deg, #f3e8ff 0%, #e9d5ff 100%)',
    status: 'development' as const,
    features: [
      '–ú–æ–±–∏–ª—å–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã',
      '–ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ',
      '–ê–≤—Ç–æ–Ω–æ–º–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ',
      '–ì–∏–±–∫–æ—Å—Ç—å –≤ —Ä–∞–∑–º–µ—â–µ–Ω–∏–∏'
    ]
  },
  {
    id: 'parkon',
    title: '–ü–ê–†–ö–û–ù',
    description: '–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–∞—Ä–∫–æ–≤–∫–∏',
    icon: 'üÖøÔ∏è',
    gradient: 'linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%)',
    status: 'planned' as const,
    features: [
      '–ö–æ–Ω—Ç—Ä–æ–ª—å –ø–∞—Ä–∫–æ–≤–æ—á–Ω—ã—Ö –º–µ—Å—Ç',
      '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ —à—Ç—Ä–∞—Ñ–æ–≤',
      '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏',
      '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏'
    ]
  }
];

export const ActivitiesPage: React.FC = () => {
  return (
    <PageContainer>
      <Header>
        <Title>–ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã</Title>
        <Subtitle>
          –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è 
          –∏ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞ –¥–æ—Ä–æ–≥–∞—Ö –°–º–æ–ª–µ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏
        </Subtitle>
      </Header>

      <ActivitiesGrid>
        {activities.map(activity => (
          <ActivityCard key={activity.id}>
            <CardImage $gradient={activity.gradient}>
              {activity.icon}
            </CardImage>
            <CardContent>
              <CardTitle>{activity.title}</CardTitle>
              <CardDescription>{activity.description}</CardDescription>
              <FeaturesList>
                {activity.features.map((feature, index) => (
                  <li key={index}>{feature}</li>
                ))}
              </FeaturesList>
              <CardFooter>
                <StatusBadge $status={activity.status}>
                  {activity.status === 'active' && '–ê–∫—Ç–∏–≤–Ω–æ'}
                  {activity.status === 'development' && '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'}
                  {activity.status === 'planned' && '–ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è'}
                </StatusBadge>
                <LearnMoreButton>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</LearnMoreButton>
              </CardFooter>
            </CardContent>
          </ActivityCard>
        ))}
      </ActivitiesGrid>

      <StatsSection>
        <h2>–ù–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>
        <p>–¶–∏—Ñ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≥–æ–≤–æ—Ä—è—Ç –æ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã</p>
        <StatsGrid>
          <StatItem>
            <div className="number">350+</div>
            <div className="label">–°–≤–µ—Ç–æ—Ñ–æ—Ä–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤</div>
          </StatItem>
          <StatItem>
            <div className="number">1200+</div>
            <div className="label">–ö–∞–º–µ—Ä –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è</div>
          </StatItem>
          <StatItem>
            <div className="number">5000+</div>
            <div className="label">–î–æ—Ä–æ–∂–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤</div>
          </StatItem>
          <StatItem>
            <div className="number">24/7</div>
            <div className="label">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</div>
          </StatItem>
        </StatsGrid>
      </StatsSection>
    </PageContainer>
  );
};
